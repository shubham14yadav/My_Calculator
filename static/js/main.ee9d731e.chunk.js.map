{"version":3,"sources":["Components/Button.jsx","Components/Input.jsx","Components/ClearButton.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","val","children","isNaN","onClick","handleClick","Input","input","ClearButton","handleClear","App","handleEqual","setState","math","state","addToInput","bind","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4VASaA,EAAS,SAAAC,GAAK,OACzB,qBACEC,UAAS,0BANMC,EAOFF,EAAMG,SANbC,MAAMF,IAAgB,MAARA,GAAuB,MAARA,EAMG,WAAP,OAE/BG,QAAS,kBAAML,EAAMM,YAAYN,EAAMG,WAJzC,SAMGH,EAAMG,WAXQ,IAAAD,GCFNK,G,MAAQ,SAACP,GAAD,OACjB,qBAAKC,UAAU,QAAf,SAAwBD,EAAMQ,UCDrBC,G,MAAa,SAACT,GAAD,OACtB,qBAAKC,UAAU,YAAYI,QAASL,EAAMU,YAA1C,SACKV,EAAMG,a,QC+DAQ,E,kDA5Db,WAAYX,GAAO,IAAD,8BAChB,cAAMA,IAkBVY,YAAc,WACZ,EAAKC,SAAS,CAACL,MAAOM,IAAc,EAAKC,MAAMP,UAlB7C,EAAKO,MAAM,CACTP,MAAO,IAGT,EAAKQ,WAAa,EAAKA,WAAWC,KAAhB,gBANF,E,8CAepB,SAAWf,GACTgB,KAAKL,SAAS,CAACL,MAAOU,KAAKH,MAAMP,MAAQN,M,oBAOzC,WAAS,IAAD,OACR,OACE,qBAAKD,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAOO,MAAOU,KAAKH,MAAMP,QACzB,sBAAKP,UAAU,MAAf,UACA,cAAC,EAAD,CAAQK,YAAaY,KAAKF,WAA1B,eACA,cAAC,EAAD,CAAQV,YAAaY,KAAKF,WAA1B,eACA,cAAC,EAAD,CAAQV,YAAaY,KAAKF,WAA1B,eACA,cAAC,EAAD,CAAQV,YAAaY,KAAKF,WAA1B,kBAEA,sBAAKf,UAAU,MAAf,UACA,cAAC,EAAD,CAAQK,YAAaY,KAAKF,WAA1B,eACA,cAAC,EAAD,CAAQV,YAAaY,KAAKF,WAA1B,eACA,cAAC,EAAD,CAAQV,YAAaY,KAAKF,WAA1B,eACA,cAAC,EAAD,CAAQV,YAAaY,KAAKF,WAA1B,kBAEA,sBAAKf,UAAU,MAAf,UACA,cAAC,EAAD,CAAQK,YAAaY,KAAKF,WAA1B,eACA,cAAC,EAAD,CAAQV,YAAaY,KAAKF,WAA1B,eACA,cAAC,EAAD,CAAQV,YAAaY,KAAKF,WAA1B,eACA,cAAC,EAAD,CAAQV,YAAaY,KAAKF,WAA1B,kBAEA,sBAAKf,UAAU,MAAf,UACA,cAAC,EAAD,CAAQK,YAAaY,KAAKF,WAA1B,eACA,cAAC,EAAD,CAAQV,YAAaY,KAAKF,WAA1B,eACA,cAAC,EAAD,CAAQV,YAAc,kBAAM,EAAKM,eAAjC,eACA,cAAC,EAAD,CAAQN,YAAaY,KAAKF,WAA1B,kBAEA,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,CAAaS,YAAa,kBAAI,EAAKG,SAAS,CAACL,MAAO,MAApD,8B,GAtDQW,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ee9d731e.chunk.js","sourcesContent":["\n\nimport React from \"react\";\nimport \"./Button.css\";\n\nconst isOperator = val => {\n  return !isNaN(val) || val === \".\" || val === \"=\";\n};\n\nexport const Button = props => (\n  <div\n    className={`button-wrapper ${\n      isOperator(props.children) ? null : \"operator\"\n    }`}\n    onClick={() => props.handleClick(props.children)}\n  >\n    {props.children}\n  </div>\n);\n\n\n\n","import React from \"react\"\nimport './Input.css'\n\nexport const Input = (props) => (\n    <div className=\"input\">{props.input}\n        \n\n    </div>\n\n);\n\n\n\n","import React from \"react\"\nimport './ClearButton.css'\n\nexport const ClearButton =(props) =>(\n    <div className=\"clear-btn\" onClick={props.handleClear}>\n        {props.children}\n    </div>\n\n\n\n)","import React, {Component} from \"react\";\nimport \"./App.css\";\nimport {Button} from \"./Components/Button\";\nimport {Input} from \"./Components/Input\";\nimport {ClearButton} from \"./Components/ClearButton.jsx\";\nimport * as math from 'mathjs';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      input: \"\"\n\n    };\n    this.addToInput = this.addToInput.bind(this);\n  }\n\n// addToInput = val =>{\n//   this.setState({input: this.state.input + val});\n\n// }\n//alternate way if do not wish to add bind code\n\naddToInput(val){\n  this.setState({input: this.state.input + val});\n}\n\nhandleEqual = () =>{\n  this.setState({input: math.evaluate(this.state.input)});\n}\n\n  render(){\n  return (\n    <div className=\"App\">\n      <div className='calc-wrapper'>\n        <Input input={this.state.input}/>\n        <div className='row'>\n        <Button handleClick={this.addToInput}>7</Button>\n        <Button handleClick={this.addToInput}>8</Button>\n        <Button handleClick={this.addToInput}>9</Button>\n        <Button handleClick={this.addToInput}>/</Button>\n        </div>\n        <div className='row'>\n        <Button handleClick={this.addToInput}>4</Button>\n        <Button handleClick={this.addToInput}>5</Button>\n        <Button handleClick={this.addToInput}>6</Button>\n        <Button handleClick={this.addToInput}>*</Button>\n        </div>\n        <div className='row'>\n        <Button handleClick={this.addToInput}>1</Button>\n        <Button handleClick={this.addToInput}>2</Button>\n        <Button handleClick={this.addToInput}>3</Button>\n        <Button handleClick={this.addToInput}>+</Button>\n        </div>\n        <div className='row'>\n        <Button handleClick={this.addToInput}>.</Button>\n        <Button handleClick={this.addToInput}>0</Button>\n        <Button handleClick={ () => this.handleEqual()}>=</Button>\n        <Button handleClick={this.addToInput}>-</Button>\n        </div>\n        <div className='row'>\n          <ClearButton handleClear={()=>this.setState({input: \"\"}) }>Clear</ClearButton>\n        </div>\n        </div>\n    </div>\n  );\n}}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}